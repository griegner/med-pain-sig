import pandas as pd


configfile: "config/smk-config.yml"


cbf = pd.read_csv("config/cbf-filtered.csv")
bold = pd.read_csv("config/bold-filtered.csv")

cbf_to_ps = expand(
    config["cbf_to_ps"],
    zip,
    sub=cbf["sub"],
    ses=cbf["ses"],
    run=cbf["run"],
    task=cbf["task"],
)

bold_to_ps = expand(config["bold_to_ps"], zip, sub=bold["sub"], task=bold["task"])


rule all:
    input:
        cbf_to_ps,
        config["cbf_drop_outliers"],
        bold_to_ps,
        config["bold_drop_outliers"],


rule cbf_drop_outliers:
    input:
        cmd="workflow/scripts/01_cbf-drop-outliers.py",
        path=config["cbf_ps_agg"],
    output:
        config["cbf_drop_outliers"],
    script:
        "scripts/01_cbf-drop-outliers.py"


rule cbf_ps_agg:
    input:
        cbf_to_ps,
    output:
        config["cbf_ps_agg"],
    run:
        ps_responses = [pd.read_csv(csv) for csv in input]
        pd.concat(ps_responses).to_csv(output[0], index=False)


rule cbf_to_ps:
    input:
        cmd="workflow/scripts/00_cbf-to-ps.py",
        path=config["aslprep"],
    output:
        config["cbf_to_ps"],
    params:
        smooth_fwhm=config["smooth_fwhm"],
    shell:
        "python {input.cmd} {input.path} {output} --smooth_fwhm {params.smooth_fwhm}"


rule bold_drop_outliers:
    input:
        cmd="workflow/scripts/02_bold-drop-outliers.py",
        path=config["bold_ps_agg"],
    output:
        config["bold_drop_outliers"],
    script:
        "scripts/02_bold-drop-outliers.py"


rule bold_ps_agg:
    input:
        bold_to_ps,
    output:
        config["bold_ps_agg"],
    run:
        ps_responses = [pd.read_csv(csv) for csv in input]
        (
            pd.concat(ps_responses)
            .drop(columns=["task"])
            .rename({"task_map": "task"}, axis="columns")
            .to_csv(output[0], index=False)
        )


rule bold_to_ps:
    input:
        cmd="workflow/scripts/01_bold-to-ps.py",
        path=config["bold_to_pe"],
    output:
        config["bold_to_ps"],
    shell:
        "python {input.cmd} {input.path} {output}"


rule bold_to_pe:
    input:
        cmd="workflow/scripts/00_bold-to-pe.py",
        path=config["fmriprep"],
    output:
        config["bold_to_pe"],
    params:
        smooth_fwhm=config["smooth_fwhm"],
    threads: 6
    shell:
        "python {input.cmd} {input.path} {output} --smooth_fwhm {params.smooth_fwhm} --n_jobs {threads}"
